import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = function (a0) { return { "ui-helper-hidden": a0 }; };
function Galleria_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r328 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 7);
    ɵngcc0.ɵɵlistener("click", function Galleria_li_2_Template_li_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r328); const image_r325 = ctx.$implicit; const i_r326 = ctx.index; const ctx_r327 = ɵngcc0.ɵɵnextContext(); return ctx_r327.clickImage($event, image_r325, i_r326); });
    ɵngcc0.ɵɵelement(1, "img", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const image_r325 = ctx.$implicit;
    const i_r326 = ctx.index;
    const ctx_r321 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("width", ctx_r321.panelWidth, "px")("height", ctx_r321.panelHeight, "px");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c0, i_r326 != ctx_r321.activeIndex));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("src", image_r325.source, ɵngcc0.ɵɵsanitizeUrl)("alt", image_r325.alt)("title", image_r325.title);
} }
const _c1 = function (a0) { return { "ui-galleria-frame-active": a0 }; };
function Galleria_div_3_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r334 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 12, 13);
    ɵngcc0.ɵɵlistener("click", function Galleria_div_3_li_2_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r334); const _r332 = ɵngcc0.ɵɵreference(1); const ctx_r333 = ɵngcc0.ɵɵnextContext(2); return ctx_r333.frameClick(_r332); });
    ɵngcc0.ɵɵelementStart(2, "div", 14);
    ɵngcc0.ɵɵelement(3, "img", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const image_r330 = ctx.$implicit;
    const i_r331 = ctx.index;
    const ctx_r329 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("width", ctx_r329.frameWidth, "px")("height", ctx_r329.frameHeight, "px")("transition", "opacity 0.75s ease");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(14, _c1, i_r331 == ctx_r329.activeIndex));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵstyleProp("width", ctx_r329.frameWidth, "px")("height", ctx_r329.frameHeight, "px");
    ɵngcc0.ɵɵproperty("src", image_r330.source, ɵngcc0.ɵɵsanitizeUrl)("alt", image_r330.alt)("title", image_r330.title);
} }
const _c2 = function () { return { "ui-galleria-filmstrip-wrapper": true }; };
function Galleria_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelementStart(1, "ul", 10);
    ɵngcc0.ɵɵtemplate(2, Galleria_div_3_li_2_Template, 4, 16, "li", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r322 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction0(4, _c2));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("left", ctx_r322.stripLeft, "px");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r322.images);
} }
function Galleria_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r336 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵlistener("click", function Galleria_div_4_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r336); const ctx_r335 = ɵngcc0.ɵɵnextContext(); return ctx_r335.clickNavLeft(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r323 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("bottom", ctx_r323.frameHeight / 2, "px");
} }
function Galleria_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵelementStart(1, "h4");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "p");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r324 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r324.images[ctx_r324.activeIndex] == null ? null : ctx_r324.images[ctx_r324.activeIndex].title);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r324.images[ctx_r324.activeIndex] == null ? null : ctx_r324.images[ctx_r324.activeIndex].alt);
} }
const _c3 = function () { return { "ui-galleria ui-widget ui-widget-content ui-corner-all": true }; };
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { NgModule, Component, ElementRef, AfterViewChecked, AfterViewInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DomHandler } from 'primeng/dom';
let Galleria = class Galleria {
    constructor(el) {
        this.el = el;
        this.panelWidth = 600;
        this.panelHeight = 400;
        this.frameWidth = 60;
        this.frameHeight = 40;
        this.activeIndex = 0;
        this.showFilmstrip = true;
        this.autoPlay = true;
        this.transitionInterval = 4000;
        this.showCaption = true;
        this.effectDuration = 500;
        this.onImageClicked = new EventEmitter();
        this.onImageChange = new EventEmitter();
        this.stripLeft = 0;
    }
    ngAfterViewChecked() {
        if (this.imagesChanged) {
            this.stopSlideshow();
            Promise.resolve(null).then(() => {
                this.render();
                this.imagesChanged = false;
            });
        }
    }
    get images() {
        return this._images;
    }
    set images(value) {
        this._images = value;
        this.imagesChanged = true;
        if (this.initialized) {
            this.activeIndex = 0;
        }
    }
    ngAfterViewInit() {
        this.container = this.el.nativeElement.children[0];
        this.panelWrapper = DomHandler.findSingle(this.el.nativeElement, 'ul.ui-galleria-panel-wrapper');
        this.initialized = true;
        if (this.showFilmstrip) {
            this.stripWrapper = DomHandler.findSingle(this.container, 'div.ui-galleria-filmstrip-wrapper');
            this.strip = DomHandler.findSingle(this.stripWrapper, 'ul.ui-galleria-filmstrip');
        }
        if (this.images && this.images.length) {
            this.render();
        }
    }
    render() {
        this.panels = DomHandler.find(this.panelWrapper, 'li.ui-galleria-panel');
        if (this.showFilmstrip) {
            this.frames = DomHandler.find(this.strip, 'li.ui-galleria-frame');
            this.stripWrapper.style.width = DomHandler.width(this.panelWrapper) - 50 + 'px';
            this.stripWrapper.style.height = this.frameHeight + 'px';
        }
        if (this.showCaption) {
            this.caption = DomHandler.findSingle(this.container, 'div.ui-galleria-caption');
            this.caption.style.bottom = this.showFilmstrip ? DomHandler.getOuterHeight(this.stripWrapper, true) + 'px' : 0 + 'px';
            this.caption.style.width = DomHandler.width(this.panelWrapper) + 'px';
        }
        if (this.autoPlay) {
            this.startSlideshow();
        }
        this.container.style.visibility = 'visible';
    }
    startSlideshow() {
        this.interval = setInterval(() => {
            this.next();
        }, this.transitionInterval);
        this.slideshowActive = true;
    }
    stopSlideshow() {
        if (this.interval) {
            clearInterval(this.interval);
        }
        this.slideshowActive = false;
    }
    clickNavRight() {
        if (this.slideshowActive) {
            this.stopSlideshow();
        }
        this.next();
    }
    clickNavLeft() {
        if (this.slideshowActive) {
            this.stopSlideshow();
        }
        this.prev();
    }
    frameClick(frame) {
        if (this.slideshowActive) {
            this.stopSlideshow();
        }
        this.select(DomHandler.index(frame), false);
    }
    prev() {
        if (this.activeIndex !== 0) {
            this.select(this.activeIndex - 1, true);
        }
    }
    next() {
        if (this.activeIndex !== (this.panels.length - 1)) {
            this.select(this.activeIndex + 1, true);
        }
        else {
            this.select(0, false);
            this.stripLeft = 0;
        }
    }
    select(index, reposition) {
        if (index !== this.activeIndex) {
            let oldPanel = this.panels[this.activeIndex], newPanel = this.panels[index];
            DomHandler.fadeIn(newPanel, this.effectDuration);
            if (this.showFilmstrip) {
                let oldFrame = this.frames[this.activeIndex], newFrame = this.frames[index];
                if (reposition === undefined || reposition === true) {
                    let frameLeft = newFrame.offsetLeft, stepFactor = this.frameWidth + parseInt(getComputedStyle(newFrame)['margin-right'], 10), stripLeft = this.strip.offsetLeft, frameViewportLeft = frameLeft + stripLeft, frameViewportRight = frameViewportLeft + this.frameWidth;
                    if (frameViewportRight > DomHandler.width(this.stripWrapper))
                        this.stripLeft -= stepFactor;
                    else if (frameViewportLeft < 0)
                        this.stripLeft += stepFactor;
                }
            }
            this.activeIndex = index;
            this.onImageChange.emit({ index: index });
        }
    }
    clickImage(event, image, i) {
        this.onImageClicked.emit({ originalEvent: event, image: image, index: i });
    }
    ngOnDestroy() {
        this.stopSlideshow();
    }
};
Galleria.ɵfac = function Galleria_Factory(t) { return new (t || Galleria)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
Galleria.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Galleria, selectors: [["p-galleria"]], inputs: { panelWidth: "panelWidth", panelHeight: "panelHeight", frameWidth: "frameWidth", frameHeight: "frameHeight", activeIndex: "activeIndex", showFilmstrip: "showFilmstrip", autoPlay: "autoPlay", transitionInterval: "transitionInterval", showCaption: "showCaption", effectDuration: "effectDuration", images: "images", style: "style", styleClass: "styleClass" }, outputs: { onImageClicked: "onImageClicked", onImageChange: "onImageChange" }, decls: 7, vars: 17, consts: [[3, "ngClass", "ngStyle"], [1, "ui-galleria-panel-wrapper"], ["class", "ui-galleria-panel", 3, "ngClass", "width", "height", "click", 4, "ngFor", "ngForOf"], [3, "ngClass", 4, "ngIf"], ["class", "ui-galleria-nav-prev pi pi-fw pi-chevron-left", 3, "bottom", "click", 4, "ngIf"], [1, "ui-galleria-nav-next", "pi", "pi-fw", "pi-chevron-right", 3, "click"], ["class", "ui-galleria-caption", "style", "display:block", 4, "ngIf"], [1, "ui-galleria-panel", 3, "ngClass", "click"], [1, "ui-panel-images", 3, "src", "alt", "title"], [3, "ngClass"], [1, "ui-galleria-filmstrip", 2, "transition", "left 1s"], ["class", "ui-galleria-frame", 3, "ngClass", "width", "height", "transition", "click", 4, "ngFor", "ngForOf"], [1, "ui-galleria-frame", 3, "ngClass", "click"], ["frame", ""], [1, "ui-galleria-frame-content"], [1, "ui-galleria-frame-image", 3, "src", "alt", "title"], [1, "ui-galleria-nav-prev", "pi", "pi-fw", "pi-chevron-left", 3, "click"], [1, "ui-galleria-caption", 2, "display", "block"]], template: function Galleria_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "ul", 1);
        ɵngcc0.ɵɵtemplate(2, Galleria_li_2_Template, 2, 10, "li", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, Galleria_div_3_Template, 3, 5, "div", 3);
        ɵngcc0.ɵɵtemplate(4, Galleria_div_4_Template, 1, 2, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "div", 5);
        ɵngcc0.ɵɵlistener("click", function Galleria_Template_div_click_5_listener() { return ctx.clickNavRight(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, Galleria_div_6_Template, 5, 2, "div", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.styleClass);
        ɵngcc0.ɵɵstyleProp("width", ctx.panelWidth, "px");
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction0(16, _c3))("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("width", ctx.panelWidth, "px")("height", ctx.panelHeight, "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.images);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showFilmstrip);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.activeIndex !== 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("bottom", ctx.frameHeight / 2, "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showCaption && ctx.images);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc1.NgIf], encapsulation: 2 });
Galleria.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input()
], Galleria.prototype, "style", void 0);
__decorate([
    Input()
], Galleria.prototype, "styleClass", void 0);
__decorate([
    Input()
], Galleria.prototype, "panelWidth", void 0);
__decorate([
    Input()
], Galleria.prototype, "panelHeight", void 0);
__decorate([
    Input()
], Galleria.prototype, "frameWidth", void 0);
__decorate([
    Input()
], Galleria.prototype, "frameHeight", void 0);
__decorate([
    Input()
], Galleria.prototype, "activeIndex", void 0);
__decorate([
    Input()
], Galleria.prototype, "showFilmstrip", void 0);
__decorate([
    Input()
], Galleria.prototype, "autoPlay", void 0);
__decorate([
    Input()
], Galleria.prototype, "transitionInterval", void 0);
__decorate([
    Input()
], Galleria.prototype, "showCaption", void 0);
__decorate([
    Input()
], Galleria.prototype, "effectDuration", void 0);
__decorate([
    Output()
], Galleria.prototype, "onImageClicked", void 0);
__decorate([
    Output()
], Galleria.prototype, "onImageChange", void 0);
__decorate([
    Input()
], Galleria.prototype, "images", null);
export { Galleria };
let GalleriaModule = class GalleriaModule {
};
GalleriaModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: GalleriaModule });
GalleriaModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function GalleriaModule_Factory(t) { return new (t || GalleriaModule)(); }, imports: [[CommonModule]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Galleria, [{
        type: Component,
        args: [{
                selector: 'p-galleria',
                template: `
        <div [ngClass]="{'ui-galleria ui-widget ui-widget-content ui-corner-all':true}" [ngStyle]="style" [class]="styleClass" [style.width.px]="panelWidth">
            <ul class="ui-galleria-panel-wrapper" [style.width.px]="panelWidth" [style.height.px]="panelHeight">
                <li *ngFor="let image of images;let i=index" class="ui-galleria-panel" [ngClass]="{'ui-helper-hidden':i!=activeIndex}"
                    [style.width.px]="panelWidth" [style.height.px]="panelHeight" (click)="clickImage($event,image,i)">
                    <img class="ui-panel-images" [src]="image.source" [alt]="image.alt" [title]="image.title"/>
                </li>
            </ul>
            <div [ngClass]="{'ui-galleria-filmstrip-wrapper':true}" *ngIf="showFilmstrip">
                <ul class="ui-galleria-filmstrip" style="transition:left 1s" [style.left.px]="stripLeft">
                    <li #frame *ngFor="let image of images;let i=index" [ngClass]="{'ui-galleria-frame-active':i==activeIndex}" class="ui-galleria-frame" (click)="frameClick(frame)"
                        [style.width.px]="frameWidth" [style.height.px]="frameHeight" [style.transition]="'opacity 0.75s ease'">
                        <div class="ui-galleria-frame-content">
                            <img [src]="image.source" [alt]="image.alt" [title]="image.title" class="ui-galleria-frame-image"
                                [style.width.px]="frameWidth" [style.height.px]="frameHeight">
                        </div>
                    </li>
                </ul>
            </div>
            <div class="ui-galleria-nav-prev pi pi-fw pi-chevron-left" (click)="clickNavLeft()" [style.bottom.px]="frameHeight/2" *ngIf="activeIndex !== 0"></div>
            <div class="ui-galleria-nav-next pi pi-fw pi-chevron-right" (click)="clickNavRight()" [style.bottom.px]="frameHeight/2"></div>
            <div class="ui-galleria-caption" *ngIf="showCaption&&images" style="display:block">
                <h4>{{images[activeIndex]?.title}}</h4><p>{{images[activeIndex]?.alt}}</p>
            </div>
        </div>
    `
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { panelWidth: [{
            type: Input
        }], panelHeight: [{
            type: Input
        }], frameWidth: [{
            type: Input
        }], frameHeight: [{
            type: Input
        }], activeIndex: [{
            type: Input
        }], showFilmstrip: [{
            type: Input
        }], autoPlay: [{
            type: Input
        }], transitionInterval: [{
            type: Input
        }], showCaption: [{
            type: Input
        }], effectDuration: [{
            type: Input
        }], onImageClicked: [{
            type: Output
        }], onImageChange: [{
            type: Output
        }], images: [{
            type: Input
        }], style: [{
            type: Input
        }], styleClass: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GalleriaModule, { declarations: function () { return [Galleria]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Galleria]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GalleriaModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [Galleria],
                declarations: [Galleria]
            }]
    }], null, null); })();
export { GalleriaModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,