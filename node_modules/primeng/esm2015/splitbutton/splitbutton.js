import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'primeng/button';

const _c0 = ["container"];
const _c1 = ["defaultbtn"];
const _c2 = function (a0) { return { "ui-helper-hidden": a0 }; };
function SplitButton_div_5_ng_template_3_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "li", 11);
} if (rf & 2) {
    const item_r761 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c2, item_r761.visible === false));
} }
function SplitButton_div_5_ng_template_3_li_1_a_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 18);
} if (rf & 2) {
    const item_r761 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵclassMap(item_r761.icon);
    ɵngcc0.ɵɵproperty("ngClass", "ui-menuitem-icon");
} }
const _c3 = function (a0) { return { "ui-state-disabled": a0 }; };
function SplitButton_div_5_ng_template_3_li_1_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r770 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 15);
    ɵngcc0.ɵɵlistener("click", function SplitButton_div_5_ng_template_3_li_1_a_1_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r770); const item_r761 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r769 = ɵngcc0.ɵɵnextContext(2); return ctx_r769.itemClick($event, item_r761); });
    ɵngcc0.ɵɵtemplate(1, SplitButton_div_5_ng_template_3_li_1_a_1_span_1_Template, 1, 3, "span", 16);
    ɵngcc0.ɵɵelementStart(2, "span", 17);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r761 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c3, item_r761.disabled));
    ɵngcc0.ɵɵattribute("href", item_r761.url, ɵngcc0.ɵɵsanitizeUrl)("target", item_r761.target);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r761.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r761.label);
} }
function SplitButton_div_5_ng_template_3_li_1_a_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 18);
} if (rf & 2) {
    const item_r761 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵclassMap(item_r761.icon);
    ɵngcc0.ɵɵproperty("ngClass", "ui-menuitem-icon");
} }
function SplitButton_div_5_ng_template_3_li_1_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r776 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 19);
    ɵngcc0.ɵɵlistener("click", function SplitButton_div_5_ng_template_3_li_1_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r776); const item_r761 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r775 = ɵngcc0.ɵɵnextContext(2); return ctx_r775.itemClick($event, item_r761); });
    ɵngcc0.ɵɵtemplate(1, SplitButton_div_5_ng_template_3_li_1_a_2_span_1_Template, 1, 3, "span", 16);
    ɵngcc0.ɵɵelementStart(2, "span", 17);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r761 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("routerLink", item_r761.routerLink)("queryParams", item_r761.queryParams)("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c3, item_r761.disabled));
    ɵngcc0.ɵɵattribute("target", item_r761.target);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r761.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r761.label);
} }
function SplitButton_div_5_ng_template_3_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 12);
    ɵngcc0.ɵɵtemplate(1, SplitButton_div_5_ng_template_3_li_1_a_1_Template, 4, 7, "a", 13);
    ɵngcc0.ɵɵtemplate(2, SplitButton_div_5_ng_template_3_li_1_a_2_Template, 4, 8, "a", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r761 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !item_r761.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r761.routerLink);
} }
function SplitButton_div_5_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, SplitButton_div_5_ng_template_3_li_0_Template, 1, 3, "li", 9);
    ɵngcc0.ɵɵtemplate(1, SplitButton_div_5_ng_template_3_li_1_Template, 3, 2, "li", 10);
} if (rf & 2) {
    const item_r761 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", item_r761.separator);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r761.visible !== false && !item_r761.separator);
} }
const _c4 = function (a0, a1) { return { showTransitionParams: a0, hideTransitionParams: a1 }; };
const _c5 = function (a1) { return { value: "visible", params: a1 }; };
function SplitButton_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r781 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 0, 6);
    ɵngcc0.ɵɵlistener("@overlayAnimation.start", function SplitButton_div_5_Template_div_animation_overlayAnimation_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r781); const ctx_r780 = ɵngcc0.ɵɵnextContext(); return ctx_r780.onOverlayAnimationStart($event); });
    ɵngcc0.ɵɵelementStart(2, "ul", 7);
    ɵngcc0.ɵɵtemplate(3, SplitButton_div_5_ng_template_3_Template, 2, 2, "ng-template", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r758 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r758.menuStyleClass);
    ɵngcc0.ɵɵproperty("ngClass", "ui-menu ui-menu-dynamic ui-widget ui-widget-content ui-corner-all ui-helper-clearfix ui-shadow")("ngStyle", ctx_r758.menuStyle)("@overlayAnimation", ɵngcc0.ɵɵpureFunction1(10, _c5, ɵngcc0.ɵɵpureFunction2(7, _c4, ctx_r758.showTransitionOptions, ctx_r758.hideTransitionOptions)));
    ɵngcc0.ɵɵattribute("id", ctx_r758.ariaId + "_overlay");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r758.model);
} }
const _c6 = function (a1) { return { "ui-splitbutton ui-buttonset ui-widget": true, "ui-state-disabled": a1 }; };
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { NgModule, Component, ElementRef, OnDestroy, Input, Output, EventEmitter, Renderer2, ChangeDetectorRef, ViewChild } from '@angular/core';
import { trigger, state, style, transition, animate } from '@angular/animations';
import { CommonModule } from '@angular/common';
import { DomHandler } from 'primeng/dom';
import { ButtonModule } from 'primeng/button';
import { Router } from '@angular/router';
import { RouterModule } from '@angular/router';
import { UniqueComponentId } from 'primeng/utils';
let SplitButton = class SplitButton {
    constructor(el, renderer, router, cd) {
        this.el = el;
        this.renderer = renderer;
        this.router = router;
        this.cd = cd;
        this.iconPos = 'left';
        this.onClick = new EventEmitter();
        this.onDropdownClick = new EventEmitter();
        this.showTransitionOptions = '225ms ease-out';
        this.hideTransitionOptions = '195ms ease-in';
        this.overlayVisible = false;
        this.ariaId = UniqueComponentId() + '_list';
    }
    onDefaultButtonClick(event) {
        this.onClick.emit(event);
    }
    itemClick(event, item) {
        if (item.disabled) {
            event.preventDefault();
            return;
        }
        if (!item.url) {
            event.preventDefault();
        }
        if (item.command) {
            item.command({
                originalEvent: event,
                item: item
            });
        }
        this.overlayVisible = false;
    }
    show() {
        this.overlayVisible = !this.overlayVisible;
    }
    onOverlayAnimationStart(event) {
        switch (event.toState) {
            case 'visible':
                this.overlay = event.element;
                this.appendOverlay();
                this.overlay.style.zIndex = String(++DomHandler.zindex);
                this.alignOverlay();
                this.bindDocumentClickListener();
                this.bindDocumentResizeListener();
                break;
            case 'void':
                this.onOverlayHide();
                break;
        }
    }
    onDropdownButtonClick(event) {
        this.onDropdownClick.emit(event);
        this.dropdownClick = true;
        this.show();
    }
    alignOverlay() {
        if (this.appendTo)
            DomHandler.absolutePosition(this.overlay, this.containerViewChild.nativeElement);
        else
            DomHandler.relativePosition(this.overlay, this.containerViewChild.nativeElement);
    }
    appendOverlay() {
        if (this.appendTo) {
            if (this.appendTo === 'body')
                document.body.appendChild(this.overlay);
            else
                DomHandler.appendChild(this.overlay, this.appendTo);
            this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';
        }
    }
    restoreOverlayAppend() {
        if (this.overlay && this.appendTo) {
            this.el.nativeElement.appendChild(this.overlay);
        }
    }
    bindDocumentClickListener() {
        if (!this.documentClickListener) {
            this.documentClickListener = this.renderer.listen('document', 'click', () => {
                if (this.dropdownClick) {
                    this.dropdownClick = false;
                }
                else {
                    this.overlayVisible = false;
                    this.unbindDocumentClickListener();
                    this.cd.markForCheck();
                }
            });
        }
    }
    unbindDocumentClickListener() {
        if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
        }
    }
    bindDocumentResizeListener() {
        this.documentResizeListener = this.onWindowResize.bind(this);
        window.addEventListener('resize', this.documentResizeListener);
    }
    unbindDocumentResizeListener() {
        if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
        }
    }
    onWindowResize() {
        this.overlayVisible = false;
    }
    onOverlayHide() {
        this.unbindDocumentClickListener();
        this.unbindDocumentResizeListener();
        this.overlay = null;
    }
    ngOnDestroy() {
        this.restoreOverlayAppend();
        this.onOverlayHide();
    }
};
SplitButton.ɵfac = function SplitButton_Factory(t) { return new (t || SplitButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
SplitButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SplitButton, selectors: [["p-splitButton"]], viewQuery: function SplitButton_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
        ɵngcc0.ɵɵstaticViewQuery(_c1, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.buttonViewChild = _t.first);
    } }, inputs: { iconPos: "iconPos", showTransitionOptions: "showTransitionOptions", hideTransitionOptions: "hideTransitionOptions", model: "model", icon: "icon", label: "label", style: "style", styleClass: "styleClass", menuStyle: "menuStyle", menuStyleClass: "menuStyleClass", disabled: "disabled", tabindex: "tabindex", appendTo: "appendTo", dir: "dir" }, outputs: { onClick: "onClick", onDropdownClick: "onDropdownClick" }, decls: 6, vars: 15, consts: [[3, "ngClass", "ngStyle"], ["container", ""], ["type", "button", "pButton", "", 3, "icon", "iconPos", "label", "cornerStyleClass", "disabled", "click"], ["defaultbtn", ""], ["type", "button", "pButton", "", "icon", "pi pi-chevron-down", 1, "ui-splitbutton-menubutton", 3, "cornerStyleClass", "disabled", "click"], [3, "ngClass", "ngStyle", "class", 4, "ngIf"], ["overlay", ""], ["role", "menu", 1, "ui-menu-list", "ui-helper-reset"], ["ngFor", "", 3, "ngForOf"], ["class", "ui-menu-separator ui-widget-content", "role", "separator", 3, "ngClass", 4, "ngIf"], ["class", "ui-menuitem ui-widget ui-corner-all", "role", "menuitem", "role", "none", 4, "ngIf"], ["role", "separator", 1, "ui-menu-separator", "ui-widget-content", 3, "ngClass"], ["role", "menuitem", "role", "none", 1, "ui-menuitem", "ui-widget", "ui-corner-all"], ["class", "ui-menuitem-link ui-corner-all", "role", "menuitem", 3, "ngClass", "click", 4, "ngIf"], ["class", "ui-menuitem-link ui-corner-all", 3, "routerLink", "queryParams", "ngClass", "click", 4, "ngIf"], ["role", "menuitem", 1, "ui-menuitem-link", "ui-corner-all", 3, "ngClass", "click"], [3, "ngClass", "class", 4, "ngIf"], [1, "ui-menuitem-text"], [3, "ngClass"], [1, "ui-menuitem-link", "ui-corner-all", 3, "routerLink", "queryParams", "ngClass", "click"]], template: function SplitButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "button", 2, 3);
        ɵngcc0.ɵɵlistener("click", function SplitButton_Template_button_click_2_listener($event) { return ctx.onDefaultButtonClick($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "button", 4);
        ɵngcc0.ɵɵlistener("click", function SplitButton_Template_button_click_4_listener($event) { return ctx.onDropdownButtonClick($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, SplitButton_div_5_Template, 4, 12, "div", 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.styleClass);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(13, _c6, ctx.disabled))("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("icon", ctx.icon)("iconPos", ctx.iconPos)("label", ctx.label)("cornerStyleClass", ctx.dir === "rtl" ? "ui-corner-right" : "ui-corner-left")("disabled", ctx.disabled);
        ɵngcc0.ɵɵattribute("tabindex", ctx.tabindex);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("cornerStyleClass", ctx.dir === "rtl" ? "ui-corner-left" : "ui-corner-right")("disabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.overlayVisible);
    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgStyle, ɵngcc3.ButtonDirective, ɵngcc2.NgIf, ɵngcc2.NgForOf, ɵngcc1.RouterLinkWithHref], encapsulation: 2, data: { animation: [
            trigger('overlayAnimation', [
                state('void', style({
                    transform: 'translateY(5%)',
                    opacity: 0
                })),
                state('visible', style({
                    transform: 'translateY(0)',
                    opacity: 1
                })),
                transition('void => visible', animate('{{showTransitionParams}}')),
                transition('visible => void', animate('{{hideTransitionParams}}'))
            ])
        ] } });
SplitButton.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: Router },
    { type: ChangeDetectorRef }
];
__decorate([
    Input()
], SplitButton.prototype, "model", void 0);
__decorate([
    Input()
], SplitButton.prototype, "icon", void 0);
__decorate([
    Input()
], SplitButton.prototype, "iconPos", void 0);
__decorate([
    Input()
], SplitButton.prototype, "label", void 0);
__decorate([
    Output()
], SplitButton.prototype, "onClick", void 0);
__decorate([
    Output()
], SplitButton.prototype, "onDropdownClick", void 0);
__decorate([
    Input()
], SplitButton.prototype, "style", void 0);
__decorate([
    Input()
], SplitButton.prototype, "styleClass", void 0);
__decorate([
    Input()
], SplitButton.prototype, "menuStyle", void 0);
__decorate([
    Input()
], SplitButton.prototype, "menuStyleClass", void 0);
__decorate([
    Input()
], SplitButton.prototype, "disabled", void 0);
__decorate([
    Input()
], SplitButton.prototype, "tabindex", void 0);
__decorate([
    Input()
], SplitButton.prototype, "appendTo", void 0);
__decorate([
    Input()
], SplitButton.prototype, "dir", void 0);
__decorate([
    Input()
], SplitButton.prototype, "showTransitionOptions", void 0);
__decorate([
    Input()
], SplitButton.prototype, "hideTransitionOptions", void 0);
__decorate([
    ViewChild('container', { static: true })
], SplitButton.prototype, "containerViewChild", void 0);
__decorate([
    ViewChild('defaultbtn', { static: true })
], SplitButton.prototype, "buttonViewChild", void 0);
export { SplitButton };
let SplitButtonModule = class SplitButtonModule {
};
SplitButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SplitButtonModule });
SplitButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SplitButtonModule_Factory(t) { return new (t || SplitButtonModule)(); }, imports: [[CommonModule, ButtonModule, RouterModule],
        ButtonModule, RouterModule] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SplitButton, [{
        type: Component,
        args: [{
                selector: 'p-splitButton',
                template: `
        <div #container [ngClass]="{'ui-splitbutton ui-buttonset ui-widget':true,'ui-state-disabled':disabled}" [ngStyle]="style" [class]="styleClass">
            <button #defaultbtn type="button" pButton [icon]="icon" [iconPos]="iconPos" [label]="label" [cornerStyleClass]="dir === 'rtl' ? 'ui-corner-right': 'ui-corner-left'" (click)="onDefaultButtonClick($event)" [disabled]="disabled" [attr.tabindex]="tabindex">
            </button><button type="button" pButton class="ui-splitbutton-menubutton" icon="pi pi-chevron-down" [cornerStyleClass]="dir === 'rtl' ? 'ui-corner-left': 'ui-corner-right'" (click)="onDropdownButtonClick($event)" [disabled]="disabled"></button>
            <div [attr.id]="ariaId + '_overlay'" #overlay [ngClass]="'ui-menu ui-menu-dynamic ui-widget ui-widget-content ui-corner-all ui-helper-clearfix ui-shadow'" *ngIf="overlayVisible"
                    [ngStyle]="menuStyle" [class]="menuStyleClass"
                    [@overlayAnimation]="{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}" (@overlayAnimation.start)="onOverlayAnimationStart($event)">
                <ul class="ui-menu-list ui-helper-reset" role="menu">
                    <ng-template ngFor let-item [ngForOf]="model">
                        <li *ngIf="item.separator" class="ui-menu-separator ui-widget-content" [ngClass]="{'ui-helper-hidden': item.visible === false}" role="separator">
                        <li class="ui-menuitem ui-widget ui-corner-all" role="menuitem" *ngIf="item.visible !== false && !item.separator" role="none">
                            <a *ngIf="!item.routerLink" [attr.href]="item.url" class="ui-menuitem-link ui-corner-all" [attr.target]="item.target" role="menuitem"
                                [ngClass]="{'ui-state-disabled':item.disabled}" (click)="itemClick($event, item)">
                                <span [ngClass]="'ui-menuitem-icon'" [class]="item.icon" *ngIf="item.icon"></span>
                                <span class="ui-menuitem-text">{{item.label}}</span>
                            </a>
                            <a *ngIf="item.routerLink" [routerLink]="item.routerLink" [queryParams]="item.queryParams"
                                class="ui-menuitem-link ui-corner-all" [attr.target]="item.target" [ngClass]="{'ui-state-disabled':item.disabled}" (click)="itemClick($event, item)">
                                <span [ngClass]="'ui-menuitem-icon'" [class]="item.icon" *ngIf="item.icon"></span>
                                <span class="ui-menuitem-text">{{item.label}}</span>
                            </a>
                        </li>
                    </ng-template>
                </ul>
            </div>
        </div>
    `,
                animations: [
                    trigger('overlayAnimation', [
                        state('void', style({
                            transform: 'translateY(5%)',
                            opacity: 0
                        })),
                        state('visible', style({
                            transform: 'translateY(0)',
                            opacity: 1
                        })),
                        transition('void => visible', animate('{{showTransitionParams}}')),
                        transition('visible => void', animate('{{hideTransitionParams}}'))
                    ])
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.Router }, { type: ɵngcc0.ChangeDetectorRef }]; }, { iconPos: [{
            type: Input
        }], onClick: [{
            type: Output
        }], onDropdownClick: [{
            type: Output
        }], showTransitionOptions: [{
            type: Input
        }], hideTransitionOptions: [{
            type: Input
        }], model: [{
            type: Input
        }], icon: [{
            type: Input
        }], label: [{
            type: Input
        }], style: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], menuStyle: [{
            type: Input
        }], menuStyleClass: [{
            type: Input
        }], disabled: [{
            type: Input
        }], tabindex: [{
            type: Input
        }], appendTo: [{
            type: Input
        }], dir: [{
            type: Input
        }], containerViewChild: [{
            type: ViewChild,
            args: ['container', { static: true }]
        }], buttonViewChild: [{
            type: ViewChild,
            args: ['defaultbtn', { static: true }]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SplitButtonModule, { declarations: function () { return [SplitButton]; }, imports: function () { return [CommonModule, ButtonModule, RouterModule]; }, exports: function () { return [SplitButton,
        ButtonModule, RouterModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SplitButtonModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ButtonModule, RouterModule],
                exports: [SplitButton, ButtonModule, RouterModule],
                declarations: [SplitButton]
            }]
    }], null, null); })();
export { SplitButtonModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,