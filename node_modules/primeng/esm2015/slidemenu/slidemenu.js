import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/router';

const _c0 = function (a0) { return { "ui-helper-hidden": a0 }; };
function SlideMenuSub_ng_template_1_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "li", 4);
} if (rf & 2) {
    const child_r650 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c0, child_r650.visible === false));
} }
function SlideMenuSub_ng_template_1_li_1_a_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 14);
} if (rf & 2) {
    const child_r650 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", child_r650.icon);
} }
function SlideMenuSub_ng_template_1_li_1_a_2_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 15);
} }
const _c1 = function (a0) { return { "ui-state-disabled": a0 }; };
function SlideMenuSub_ng_template_1_li_1_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r662 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 10);
    ɵngcc0.ɵɵlistener("click", function SlideMenuSub_ng_template_1_li_1_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r662); ɵngcc0.ɵɵnextContext(); const _r654 = ɵngcc0.ɵɵreference(1); const child_r650 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r661 = ɵngcc0.ɵɵnextContext(); return ctx_r661.itemClick($event, child_r650, _r654); });
    ɵngcc0.ɵɵtemplate(1, SlideMenuSub_ng_template_1_li_1_a_2_span_1_Template, 1, 1, "span", 11);
    ɵngcc0.ɵɵelementStart(2, "span", 12);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SlideMenuSub_ng_template_1_li_1_a_2_span_4_Template, 1, 0, "span", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const child_r650 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("href", child_r650.url || "#", ɵngcc0.ɵɵsanitizeUrl)("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c1, child_r650.disabled));
    ɵngcc0.ɵɵattribute("target", child_r650.target)("title", child_r650.title)("id", child_r650.id)("tabindex", child_r650.tabindex ? child_r650.tabindex : "0");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r650.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(child_r650.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r650.items);
} }
function SlideMenuSub_ng_template_1_li_1_a_3_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 14);
} if (rf & 2) {
    const child_r650 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", child_r650.icon);
} }
function SlideMenuSub_ng_template_1_li_1_a_3_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 15);
} }
const _c2 = function () { return { exact: false }; };
function SlideMenuSub_ng_template_1_li_1_a_3_Template(rf, ctx) { if (rf & 1) {
    const _r669 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 16);
    ɵngcc0.ɵɵlistener("click", function SlideMenuSub_ng_template_1_li_1_a_3_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r669); ɵngcc0.ɵɵnextContext(); const _r654 = ɵngcc0.ɵɵreference(1); const child_r650 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r668 = ɵngcc0.ɵɵnextContext(); return ctx_r668.itemClick($event, child_r650, _r654); });
    ɵngcc0.ɵɵtemplate(1, SlideMenuSub_ng_template_1_li_1_a_3_span_1_Template, 1, 1, "span", 11);
    ɵngcc0.ɵɵelementStart(2, "span", 12);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SlideMenuSub_ng_template_1_li_1_a_3_span_4_Template, 1, 0, "span", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const child_r650 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("routerLink", child_r650.routerLink)("queryParams", child_r650.queryParams)("routerLinkActive", "ui-state-active")("routerLinkActiveOptions", child_r650.routerLinkActiveOptions || ɵngcc0.ɵɵpureFunction0(13, _c2))("href", child_r650.url || "#", ɵngcc0.ɵɵsanitizeUrl)("ngClass", ɵngcc0.ɵɵpureFunction1(14, _c1, child_r650.disabled));
    ɵngcc0.ɵɵattribute("target", child_r650.target)("title", child_r650.title)("id", child_r650.id)("tabindex", child_r650.tabindex ? child_r650.tabindex : "0");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r650.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(child_r650.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r650.items);
} }
function SlideMenuSub_ng_template_1_li_1_p_slideMenuSub_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "p-slideMenuSub", 17);
} if (rf & 2) {
    const child_r650 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r657 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("item", child_r650)("index", ctx_r657.index + 1)("menuWidth", ctx_r657.menuWidth);
} }
const _c3 = function (a1, a2) { return { "ui-menuitem ui-widget ui-corner-all": true, "ui-menuitem-active": a1, "ui-helper-hidden": a2 }; };
function SlideMenuSub_ng_template_1_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 5, 6);
    ɵngcc0.ɵɵtemplate(2, SlideMenuSub_ng_template_1_li_1_a_2_Template, 5, 11, "a", 7);
    ɵngcc0.ɵɵtemplate(3, SlideMenuSub_ng_template_1_li_1_a_3_Template, 5, 16, "a", 8);
    ɵngcc0.ɵɵtemplate(4, SlideMenuSub_ng_template_1_li_1_p_slideMenuSub_4_Template, 1, 3, "p-slideMenuSub", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r654 = ɵngcc0.ɵɵreference(1);
    const child_r650 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r652 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(child_r650.styleClass);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(7, _c3, _r654 == ctx_r652.activeItem, child_r650.visible === false))("ngStyle", child_r650.style);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !child_r650.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r650.routerLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r650.items);
} }
function SlideMenuSub_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, SlideMenuSub_ng_template_1_li_0_Template, 1, 3, "li", 2);
    ɵngcc0.ɵɵtemplate(1, SlideMenuSub_ng_template_1_li_1_Template, 5, 10, "li", 3);
} if (rf & 2) {
    const child_r650 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", child_r650.separator);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !child_r650.separator);
} }
const _c4 = function (a0, a1, a2) { return { "ui-slidemenu-rootlist": a0, "ui-submenu-list": a1, "ui-active-submenu": a2 }; };
const _c5 = ["container"];
const _c6 = ["backward"];
const _c7 = ["slideMenuContent"];
const _c8 = function (a1) { return { "ui-slidemenu ui-widget ui-widget-content ui-corner-all": true, "ui-slidemenu-dynamic ui-shadow": a1 }; };
const _c9 = function (a0, a1) { return { showTransitionParams: a0, hideTransitionParams: a1 }; };
const _c10 = function (a1) { return { value: "visible", params: a1 }; };
function SlideMenu_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r679 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1, 2);
    ɵngcc0.ɵɵlistener("click", function SlideMenu_div_0_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r679); const ctx_r678 = ɵngcc0.ɵɵnextContext(); return ctx_r678.onClick($event); })("@overlayAnimation.start", function SlideMenu_div_0_Template_div_animation_overlayAnimation_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r679); const ctx_r680 = ɵngcc0.ɵɵnextContext(); return ctx_r680.onOverlayAnimationStart($event); });
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4, 5);
    ɵngcc0.ɵɵelement(5, "p-slideMenuSub", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 7, 8);
    ɵngcc0.ɵɵlistener("click", function SlideMenu_div_0_Template_div_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r679); const ctx_r681 = ɵngcc0.ɵɵnextContext(); return ctx_r681.goBack(); });
    ɵngcc0.ɵɵelement(8, "span", 9);
    ɵngcc0.ɵɵelementStart(9, "span");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r674 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r674.styleClass);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(16, _c8, ctx_r674.popup))("ngStyle", ctx_r674.style)("@overlayAnimation", ɵngcc0.ɵɵpureFunction1(21, _c10, ɵngcc0.ɵɵpureFunction2(18, _c9, ctx_r674.showTransitionOptions, ctx_r674.hideTransitionOptions)))("@.disabled", ctx_r674.popup !== true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵstyleProp("height", ctx_r674.left ? ctx_r674.viewportHeight + "px" : "auto");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("item", ctx_r674.model)("index", 0)("menuWidth", ctx_r674.menuWidth)("effectDuration", ctx_r674.effectDuration)("easing", ctx_r674.easing);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("display", ctx_r674.left ? "block" : "none");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r674.backLabel);
} }
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { NgModule, Component, ElementRef, AfterViewChecked, OnDestroy, Input, Renderer2, Inject, forwardRef, ViewChild, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { trigger, state, style, transition, animate } from '@angular/animations';
import { CommonModule } from '@angular/common';
import { DomHandler } from 'primeng/dom';
import { RouterModule } from '@angular/router';
let SlideMenuSub = class SlideMenuSub {
    constructor(slideMenu) {
        this.backLabel = 'Back';
        this.easing = 'ease-out';
        this.slideMenu = slideMenu;
    }
    itemClick(event, item, listitem) {
        if (item.disabled) {
            event.preventDefault();
            return;
        }
        if (!item.url) {
            event.preventDefault();
        }
        if (item.command) {
            item.command({
                originalEvent: event,
                item: item
            });
        }
        if (item.items && !this.slideMenu.animating) {
            this.slideMenu.left -= this.slideMenu.menuWidth;
            this.activeItem = listitem;
            this.slideMenu.animating = true;
            setTimeout(() => this.slideMenu.animating = false, this.effectDuration);
        }
        if (!item.items && this.slideMenu.popup) {
            this.slideMenu.hide();
        }
    }
    ngOnDestroy() {
        this.activeItem = null;
    }
};
SlideMenuSub.ɵfac = function SlideMenuSub_Factory(t) { return new (t || SlideMenuSub)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => SlideMenu))); };
SlideMenuSub.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SlideMenuSub, selectors: [["p-slideMenuSub"]], inputs: { backLabel: "backLabel", easing: "easing", item: "item", root: "root", menuWidth: "menuWidth", effectDuration: "effectDuration", index: "index" }, decls: 2, vars: 16, consts: [[3, "ngClass"], ["ngFor", "", 3, "ngForOf"], ["class", "ui-menu-separator ui-widget-content", 3, "ngClass", 4, "ngIf"], [3, "ngClass", "class", "ngStyle", 4, "ngIf"], [1, "ui-menu-separator", "ui-widget-content", 3, "ngClass"], [3, "ngClass", "ngStyle"], ["listitem", ""], ["class", "ui-menuitem-link ui-corner-all", 3, "href", "ngClass", "click", 4, "ngIf"], ["class", "ui-menuitem-link ui-corner-all", 3, "routerLink", "queryParams", "routerLinkActive", "routerLinkActiveOptions", "href", "ngClass", "click", 4, "ngIf"], ["class", "ui-submenu", 3, "item", "index", "menuWidth", 4, "ngIf"], [1, "ui-menuitem-link", "ui-corner-all", 3, "href", "ngClass", "click"], ["class", "ui-menuitem-icon", 3, "ngClass", 4, "ngIf"], [1, "ui-menuitem-text"], ["class", "ui-submenu-icon pi pi-fw pi-caret-right", 4, "ngIf"], [1, "ui-menuitem-icon", 3, "ngClass"], [1, "ui-submenu-icon", "pi", "pi-fw", "pi-caret-right"], [1, "ui-menuitem-link", "ui-corner-all", 3, "routerLink", "queryParams", "routerLinkActive", "routerLinkActiveOptions", "href", "ngClass", "click"], [1, "ui-submenu", 3, "item", "index", "menuWidth"]], template: function SlideMenuSub_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, SlideMenuSub_ng_template_1_Template, 2, 2, "ng-template", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.menuWidth, "px")("left", ctx.root ? ctx.slideMenu.left : ctx.slideMenu.menuWidth, "px")("transition-property", ctx.root ? "left" : "none")("transition-duration", ctx.effectDuration + "ms")("transition-timing-function", ctx.easing);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(12, _c4, ctx.root, !ctx.root, 0 - ctx.slideMenu.left == ctx.index * ctx.menuWidth));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.root ? ctx.item : ctx.item.items);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc2.RouterLinkWithHref, ɵngcc2.RouterLinkActive, SlideMenuSub], encapsulation: 2 });
SlideMenuSub.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [forwardRef(() => SlideMenu),] }] }
];
__decorate([
    Input()
], SlideMenuSub.prototype, "item", void 0);
__decorate([
    Input()
], SlideMenuSub.prototype, "root", void 0);
__decorate([
    Input()
], SlideMenuSub.prototype, "backLabel", void 0);
__decorate([
    Input()
], SlideMenuSub.prototype, "menuWidth", void 0);
__decorate([
    Input()
], SlideMenuSub.prototype, "effectDuration", void 0);
__decorate([
    Input()
], SlideMenuSub.prototype, "easing", void 0);
__decorate([
    Input()
], SlideMenuSub.prototype, "index", void 0);
SlideMenuSub = __decorate([ __param(0, Inject(forwardRef(() => SlideMenu)))
], SlideMenuSub);
export { SlideMenuSub };
let SlideMenu = class SlideMenu {
    constructor(el, renderer, cd) {
        this.el = el;
        this.renderer = renderer;
        this.cd = cd;
        this.menuWidth = 190;
        this.viewportHeight = 180;
        this.effectDuration = 250;
        this.easing = 'ease-out';
        this.backLabel = 'Back';
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.showTransitionOptions = '225ms ease-out';
        this.hideTransitionOptions = '195ms ease-in';
        this.onShow = new EventEmitter();
        this.onHide = new EventEmitter();
        this.left = 0;
        this.animating = false;
    }
    ngAfterViewChecked() {
        if (!this.viewportUpdated && !this.popup && this.containerViewChild) {
            this.updateViewPort();
            this.viewportUpdated = true;
        }
    }
    set container(element) {
        this.containerViewChild = element;
    }
    set backward(element) {
        this.backwardViewChild = element;
    }
    set slideMenuContent(element) {
        this.slideMenuContentViewChild = element;
    }
    updateViewPort() {
        this.slideMenuContentViewChild.nativeElement.style.height = this.viewportHeight - DomHandler.getHiddenElementOuterHeight(this.backwardViewChild.nativeElement) + 'px';
    }
    toggle(event) {
        if (this.visible)
            this.hide();
        else
            this.show(event);
        this.preventDocumentDefault = true;
        this.cd.detectChanges();
    }
    show(event) {
        this.target = event.currentTarget;
        this.visible = true;
        this.preventDocumentDefault = true;
    }
    onOverlayAnimationStart(event) {
        switch (event.toState) {
            case 'visible':
                if (this.popup) {
                    this.updateViewPort();
                    this.moveOnTop();
                    this.onShow.emit({});
                    this.appendOverlay();
                    DomHandler.absolutePosition(this.containerViewChild.nativeElement, this.target);
                    this.bindDocumentClickListener();
                    this.bindDocumentResizeListener();
                }
                break;
            case 'void':
                this.onOverlayHide();
                this.onHide.emit({});
                break;
        }
    }
    appendOverlay() {
        if (this.appendTo) {
            if (this.appendTo === 'body')
                document.body.appendChild(this.containerViewChild.nativeElement);
            else
                DomHandler.appendChild(this.containerViewChild.nativeElement, this.appendTo);
        }
    }
    restoreOverlayAppend() {
        if (this.container && this.appendTo) {
            this.el.nativeElement.appendChild(this.containerViewChild.nativeElement);
        }
    }
    moveOnTop() {
        if (this.autoZIndex) {
            this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));
        }
    }
    hide() {
        this.visible = false;
    }
    onWindowResize() {
        this.hide();
    }
    onClick(event) {
        this.preventDocumentDefault = true;
    }
    goBack() {
        this.left += this.menuWidth;
    }
    bindDocumentClickListener() {
        if (!this.documentClickListener) {
            this.documentClickListener = this.renderer.listen('document', 'click', () => {
                if (!this.preventDocumentDefault) {
                    this.hide();
                    this.cd.detectChanges();
                }
                this.preventDocumentDefault = false;
            });
        }
    }
    unbindDocumentClickListener() {
        if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
        }
    }
    bindDocumentResizeListener() {
        this.documentResizeListener = this.onWindowResize.bind(this);
        window.addEventListener('resize', this.documentResizeListener);
    }
    unbindDocumentResizeListener() {
        if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
        }
    }
    onOverlayHide() {
        this.unbindDocumentClickListener();
        this.unbindDocumentResizeListener();
        this.preventDocumentDefault = false;
        this.target = null;
        this.left = 0;
    }
    ngOnDestroy() {
        if (this.popup) {
            this.restoreOverlayAppend();
            this.onOverlayHide();
        }
    }
};
SlideMenu.ɵfac = function SlideMenu_Factory(t) { return new (t || SlideMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
SlideMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SlideMenu, selectors: [["p-slideMenu"]], viewQuery: function SlideMenu_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c5, true);
        ɵngcc0.ɵɵviewQuery(_c6, true);
        ɵngcc0.ɵɵviewQuery(_c7, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.backward = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slideMenuContent = _t.first);
    } }, inputs: { menuWidth: "menuWidth", viewportHeight: "viewportHeight", effectDuration: "effectDuration", easing: "easing", backLabel: "backLabel", autoZIndex: "autoZIndex", baseZIndex: "baseZIndex", showTransitionOptions: "showTransitionOptions", hideTransitionOptions: "hideTransitionOptions", model: "model", popup: "popup", style: "style", styleClass: "styleClass", appendTo: "appendTo" }, outputs: { onShow: "onShow", onHide: "onHide" }, decls: 1, vars: 1, consts: [[3, "ngClass", "class", "ngStyle", "click", 4, "ngIf"], [3, "ngClass", "ngStyle", "click"], ["container", ""], [1, "ui-slidemenu-wrapper"], [1, "ui-slidemenu-content"], ["slideMenuContent", ""], ["root", "root", 3, "item", "index", "menuWidth", "effectDuration", "easing"], [1, "ui-slidemenu-backward", "ui-widget-header", "ui-corner-all", 3, "click"], ["backward", ""], [1, "ui-slidemenu-backward-icon", "pi", "pi-fw", "pi-caret-left"]], template: function SlideMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SlideMenu_div_0_Template, 11, 23, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.popup || ctx.visible);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgStyle, SlideMenuSub], encapsulation: 2, data: { animation: [
            trigger('overlayAnimation', [
                state('void', style({
                    transform: 'translateY(5%)',
                    opacity: 0
                })),
                state('visible', style({
                    transform: 'translateY(0)',
                    opacity: 1
                })),
                transition('void => visible', animate('{{showTransitionParams}}')),
                transition('visible => void', animate('{{hideTransitionParams}}'))
            ])
        ] } });
SlideMenu.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ChangeDetectorRef }
];
__decorate([
    Input()
], SlideMenu.prototype, "model", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "popup", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "style", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "styleClass", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "menuWidth", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "viewportHeight", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "effectDuration", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "easing", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "backLabel", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "appendTo", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "autoZIndex", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "baseZIndex", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "showTransitionOptions", void 0);
__decorate([
    Input()
], SlideMenu.prototype, "hideTransitionOptions", void 0);
__decorate([
    Output()
], SlideMenu.prototype, "onShow", void 0);
__decorate([
    Output()
], SlideMenu.prototype, "onHide", void 0);
__decorate([
    ViewChild('container', { static: false })
], SlideMenu.prototype, "container", null);
__decorate([
    ViewChild('backward', { static: false })
], SlideMenu.prototype, "backward", null);
__decorate([
    ViewChild('slideMenuContent', { static: false })
], SlideMenu.prototype, "slideMenuContent", null);
export { SlideMenu };
let SlideMenuModule = class SlideMenuModule {
};
SlideMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SlideMenuModule });
SlideMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SlideMenuModule_Factory(t) { return new (t || SlideMenuModule)(); }, imports: [[CommonModule, RouterModule],
        RouterModule] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SlideMenuSub, [{
        type: Component,
        args: [{
                selector: 'p-slideMenuSub',
                template: `
        <ul [ngClass]="{'ui-slidemenu-rootlist':root, 'ui-submenu-list':!root, 'ui-active-submenu': (-slideMenu.left == (index * menuWidth))}"
            [style.width.px]="menuWidth" [style.left.px]="root ? slideMenu.left : slideMenu.menuWidth"
            [style.transitionProperty]="root ? 'left' : 'none'" [style.transitionDuration]="effectDuration + 'ms'" [style.transitionTimingFunction]="easing">
            <ng-template ngFor let-child [ngForOf]="(root ? item : item.items)">
                <li *ngIf="child.separator" class="ui-menu-separator ui-widget-content" [ngClass]="{'ui-helper-hidden': child.visible === false}">
                <li *ngIf="!child.separator" #listitem [ngClass]="{'ui-menuitem ui-widget ui-corner-all':true,'ui-menuitem-active':listitem==activeItem,'ui-helper-hidden': child.visible === false}"
                    [class]="child.styleClass" [ngStyle]="child.style">
                    <a *ngIf="!child.routerLink" [href]="child.url||'#'" class="ui-menuitem-link ui-corner-all" [attr.target]="child.target" [attr.title]="child.title" [attr.id]="child.id"
                        [ngClass]="{'ui-state-disabled':child.disabled}" [attr.tabindex]="child.tabindex ? child.tabindex : '0'" 
                        (click)="itemClick($event, child, listitem)">
                        <span class="ui-menuitem-icon" *ngIf="child.icon" [ngClass]="child.icon"></span>
                        <span class="ui-menuitem-text">{{child.label}}</span>
                        <span class="ui-submenu-icon pi pi-fw pi-caret-right" *ngIf="child.items"></span>
                    </a>
                    <a *ngIf="child.routerLink" [routerLink]="child.routerLink" [queryParams]="child.queryParams" [routerLinkActive]="'ui-state-active'" 
                        [routerLinkActiveOptions]="child.routerLinkActiveOptions||{exact:false}" [href]="child.url||'#'" class="ui-menuitem-link ui-corner-all" 
                        [attr.target]="child.target" [attr.title]="child.title" [attr.id]="child.id" [attr.tabindex]="child.tabindex ? child.tabindex : '0'" 
                        [ngClass]="{'ui-state-disabled':child.disabled}" 
                        (click)="itemClick($event, child, listitem)">
                        <span class="ui-menuitem-icon" *ngIf="child.icon" [ngClass]="child.icon"></span>
                        <span class="ui-menuitem-text">{{child.label}}</span>
                        <span class="ui-submenu-icon pi pi-fw pi-caret-right" *ngIf="child.items"></span>
                    </a>
                    <p-slideMenuSub class="ui-submenu" [item]="child" [index]="index + 1" [menuWidth]="menuWidth" *ngIf="child.items"></p-slideMenuSub>
                </li>
            </ng-template>
        </ul>
    `
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [forwardRef(() => SlideMenu)]
            }] }]; }, { backLabel: [{
            type: Input
        }], easing: [{
            type: Input
        }], item: [{
            type: Input
        }], root: [{
            type: Input
        }], menuWidth: [{
            type: Input
        }], effectDuration: [{
            type: Input
        }], index: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SlideMenu, [{
        type: Component,
        args: [{
                selector: 'p-slideMenu',
                template: `
        <div #container [ngClass]="{'ui-slidemenu ui-widget ui-widget-content ui-corner-all':true, 'ui-slidemenu-dynamic ui-shadow':popup}" 
            [class]="styleClass" [ngStyle]="style" (click)="onClick($event)"
            [@overlayAnimation]="{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}" [@.disabled]="popup !== true" (@overlayAnimation.start)="onOverlayAnimationStart($event)" *ngIf="!popup || visible">
            <div class="ui-slidemenu-wrapper" [style.height]="left ? viewportHeight + 'px' : 'auto'">
                <div #slideMenuContent class="ui-slidemenu-content">
                    <p-slideMenuSub [item]="model" root="root" [index]="0" [menuWidth]="menuWidth" [effectDuration]="effectDuration" [easing]="easing"></p-slideMenuSub>
                </div>
                <div #backward class="ui-slidemenu-backward ui-widget-header ui-corner-all" [style.display]="left ? 'block' : 'none'" (click)="goBack()">
                    <span class="ui-slidemenu-backward-icon pi pi-fw pi-caret-left"></span><span>{{backLabel}}</span>
                </div>
            </div>
        </div>
    `,
                animations: [
                    trigger('overlayAnimation', [
                        state('void', style({
                            transform: 'translateY(5%)',
                            opacity: 0
                        })),
                        state('visible', style({
                            transform: 'translateY(0)',
                            opacity: 1
                        })),
                        transition('void => visible', animate('{{showTransitionParams}}')),
                        transition('visible => void', animate('{{hideTransitionParams}}'))
                    ])
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { menuWidth: [{
            type: Input
        }], viewportHeight: [{
            type: Input
        }], effectDuration: [{
            type: Input
        }], easing: [{
            type: Input
        }], backLabel: [{
            type: Input
        }], autoZIndex: [{
            type: Input
        }], baseZIndex: [{
            type: Input
        }], showTransitionOptions: [{
            type: Input
        }], hideTransitionOptions: [{
            type: Input
        }], onShow: [{
            type: Output
        }], onHide: [{
            type: Output
        }], container: [{
            type: ViewChild,
            args: ['container', { static: false }]
        }], backward: [{
            type: ViewChild,
            args: ['backward', { static: false }]
        }], slideMenuContent: [{
            type: ViewChild,
            args: ['slideMenuContent', { static: false }]
        }], model: [{
            type: Input
        }], popup: [{
            type: Input
        }], style: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], appendTo: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SlideMenuModule, { declarations: function () { return [SlideMenu,
        SlideMenuSub]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [SlideMenu,
        RouterModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SlideMenuModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                exports: [SlideMenu, RouterModule],
                declarations: [SlideMenu, SlideMenuSub]
            }]
    }], null, null); })();
export { SlideMenuModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,