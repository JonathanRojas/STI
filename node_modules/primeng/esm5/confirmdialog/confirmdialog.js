import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'primeng/api';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'primeng/button';

var _c0 = ["content"];
function ConfirmDialog_div_0_div_1_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r374 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r374.header);
} }
var _c1 = function () { return { "ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all": true }; };
function ConfirmDialog_div_0_div_1_a_4_Template(rf, ctx) { if (rf & 1) {
    var _r381 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 14);
    ɵngcc0.ɵɵlistener("click", function ConfirmDialog_div_0_div_1_a_4_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r381); var ctx_r380 = ɵngcc0.ɵɵnextContext(3); return ctx_r380.close($event); })("keydown.enter", function ConfirmDialog_div_0_div_1_a_4_Template_a_keydown_enter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r381); var ctx_r382 = ɵngcc0.ɵɵnextContext(3); return ctx_r382.close($event); });
    ɵngcc0.ɵɵelement(1, "span", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction0(1, _c1));
} }
function ConfirmDialog_div_0_div_1_i_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 16);
} if (rf & 2) {
    var ctx_r377 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMap(ctx_r377.icon);
    ɵngcc0.ɵɵproperty("ngClass", "ui-confirmdialog-icon");
} }
function ConfirmDialog_div_0_div_1_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} }
function ConfirmDialog_div_0_div_1_div_10_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r386 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 19);
    ɵngcc0.ɵɵlistener("click", function ConfirmDialog_div_0_div_1_div_10_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r386); var ctx_r385 = ɵngcc0.ɵɵnextContext(4); return ctx_r385.accept(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r383 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMap(ctx_r383.acceptButtonStyleClass);
    ɵngcc0.ɵɵproperty("icon", ctx_r383.acceptIcon)("label", ctx_r383.acceptLabel);
} }
function ConfirmDialog_div_0_div_1_div_10_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r388 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 19);
    ɵngcc0.ɵɵlistener("click", function ConfirmDialog_div_0_div_1_div_10_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r388); var ctx_r387 = ɵngcc0.ɵɵnextContext(4); return ctx_r387.reject(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r384 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMap(ctx_r384.rejectButtonStyleClass);
    ɵngcc0.ɵɵproperty("icon", ctx_r384.rejectIcon)("label", ctx_r384.rejectLabel);
} }
function ConfirmDialog_div_0_div_1_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵtemplate(1, ConfirmDialog_div_0_div_1_div_10_button_1_Template, 1, 4, "button", 18);
    ɵngcc0.ɵɵtemplate(2, ConfirmDialog_div_0_div_1_div_10_button_2_Template, 1, 4, "button", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r379 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r379.acceptVisible);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r379.rejectVisible);
} }
var _c2 = function (a1) { return { "ui-dialog ui-confirmdialog ui-widget ui-widget-content ui-corner-all ui-shadow": true, "ui-dialog-rtl": a1 }; };
var _c3 = function (a0, a1) { return { transform: a0, transition: a1 }; };
var _c4 = function (a1) { return { value: "visible", params: a1 }; };
function ConfirmDialog_div_0_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r390 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵlistener("mousedown", function ConfirmDialog_div_0_div_1_Template_div_mousedown_0_listener() { ɵngcc0.ɵɵrestoreView(_r390); var ctx_r389 = ɵngcc0.ɵɵnextContext(2); return ctx_r389.moveOnTop(); })("@animation.start", function ConfirmDialog_div_0_div_1_Template_div_animation_animation_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r390); var ctx_r391 = ɵngcc0.ɵɵnextContext(2); return ctx_r391.onAnimationStart($event); })("@animation.done", function ConfirmDialog_div_0_div_1_Template_div_animation_animation_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r390); var ctx_r392 = ɵngcc0.ɵɵnextContext(2); return ctx_r392.onAnimationEnd($event); });
    ɵngcc0.ɵɵelementStart(1, "div", 4);
    ɵngcc0.ɵɵtemplate(2, ConfirmDialog_div_0_div_1_span_2_Template, 2, 1, "span", 5);
    ɵngcc0.ɵɵelementStart(3, "div", 6);
    ɵngcc0.ɵɵtemplate(4, ConfirmDialog_div_0_div_1_a_4_Template, 2, 2, "a", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 8, 9);
    ɵngcc0.ɵɵtemplate(7, ConfirmDialog_div_0_div_1_i_7_Template, 1, 3, "i", 10);
    ɵngcc0.ɵɵelement(8, "span", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, ConfirmDialog_div_0_div_1_div_9_Template, 2, 0, "div", 12);
    ɵngcc0.ɵɵtemplate(10, ConfirmDialog_div_0_div_1_div_10_Template, 3, 2, "div", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r373 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r373.styleClass);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(11, _c2, ctx_r373.rtl))("ngStyle", ctx_r373.style)("@animation", ɵngcc0.ɵɵpureFunction1(16, _c4, ɵngcc0.ɵɵpureFunction2(13, _c3, ctx_r373.transformOptions, ctx_r373.transitionOptions)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r373.header);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r373.closable);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r373.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r373.message, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r373.footer);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r373.footer);
} }
function ConfirmDialog_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, ConfirmDialog_div_0_div_1_Template, 11, 18, "div", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r372 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r372.getWrapperClass());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r372.visible);
} }
var _c5 = [[["p-footer"]]];
var _c6 = ["p-footer"];
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { NgModule, Component, ElementRef, OnDestroy, Input, EventEmitter, Renderer2, ContentChild, NgZone, ViewChild, ChangeDetectorRef } from '@angular/core';
import { trigger, style, transition, animate, useAnimation, animation } from '@angular/animations';
import { CommonModule } from '@angular/common';
import { DomHandler } from 'primeng/dom';
import { Footer, SharedModule } from 'primeng/api';
import { ButtonModule } from 'primeng/button';
import { ConfirmationService } from 'primeng/api';
var showAnimation = animation([
    style({ transform: '{{transform}}', opacity: 0 }),
    animate('{{transition}}', style({ transform: 'none', opacity: 1 }))
]);
var hideAnimation = animation([
    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))
]);
var ConfirmDialog = /** @class */ (function () {
    function ConfirmDialog(el, renderer, confirmationService, zone, cd) {
        var _this = this;
        this.el = el;
        this.renderer = renderer;
        this.confirmationService = confirmationService;
        this.zone = zone;
        this.cd = cd;
        this.acceptIcon = 'pi pi-check';
        this.acceptLabel = 'Yes';
        this.acceptVisible = true;
        this.rejectIcon = 'pi pi-times';
        this.rejectLabel = 'No';
        this.rejectVisible = true;
        this.closeOnEscape = true;
        this.blockScroll = true;
        this.closable = true;
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.transitionOptions = '150ms cubic-bezier(0, 0, 0.2, 1)';
        this.focusTrap = true;
        this._position = "center";
        this.transformOptions = "scale(0.7)";
        this.subscription = this.confirmationService.requireConfirmation$.subscribe(function (confirmation) {
            if (!confirmation) {
                _this.hide();
                return;
            }
            if (confirmation.key === _this.key) {
                _this.confirmation = confirmation;
                _this.message = _this.confirmation.message || _this.message;
                _this.icon = _this.confirmation.icon || _this.icon;
                _this.header = _this.confirmation.header || _this.header;
                _this.rejectVisible = _this.confirmation.rejectVisible == null ? _this.rejectVisible : _this.confirmation.rejectVisible;
                _this.acceptVisible = _this.confirmation.acceptVisible == null ? _this.acceptVisible : _this.confirmation.acceptVisible;
                _this.acceptLabel = _this.confirmation.acceptLabel || _this.acceptLabel;
                _this.rejectLabel = _this.confirmation.rejectLabel || _this.rejectLabel;
                _this.acceptIcon = _this.confirmation.acceptIcon || _this.acceptIcon;
                _this.rejectIcon = _this.confirmation.rejectIcon || _this.rejectIcon;
                if (_this.confirmation.accept) {
                    _this.confirmation.acceptEvent = new EventEmitter();
                    _this.confirmation.acceptEvent.subscribe(_this.confirmation.accept);
                }
                if (_this.confirmation.reject) {
                    _this.confirmation.rejectEvent = new EventEmitter();
                    _this.confirmation.rejectEvent.subscribe(_this.confirmation.reject);
                }
                if (_this.confirmation.blockScroll === false || _this.confirmation.blockScroll === true) {
                    _this.blockScroll = _this.confirmation.blockScroll;
                }
                _this.visible = true;
            }
        });
    }
    Object.defineProperty(ConfirmDialog.prototype, "visible", {
        get: function () {
            return this._visible;
        },
        set: function (value) {
            this._visible = value;
            if (this._visible && !this.maskVisible) {
                this.maskVisible = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ConfirmDialog.prototype, "position", {
        get: function () {
            return this._position;
        },
        set: function (value) {
            this._position = value;
            switch (value) {
                case 'topleft':
                case 'bottomleft':
                case 'left':
                    this.transformOptions = "translate3d(-100%, 0px, 0px)";
                    break;
                case 'topright':
                case 'bottomright':
                case 'right':
                    this.transformOptions = "translate3d(100%, 0px, 0px)";
                    break;
                case 'bottom':
                    this.transformOptions = "translate3d(0px, 100%, 0px)";
                    break;
                case 'top':
                    this.transformOptions = "translate3d(0px, -100%, 0px)";
                    break;
                default:
                    this.transformOptions = "scale(0.7)";
                    break;
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    ConfirmDialog.prototype.onAnimationStart = function (event) {
        switch (event.toState) {
            case 'visible':
                this.container = event.element;
                this.wrapper = this.container.parentElement;
                this.contentContainer = DomHandler.findSingle(this.container, '.ui-dialog-content');
                if (this.acceptVisible || this.rejectVisible) {
                    DomHandler.findSingle(this.container, 'button').focus();
                }
                this.appendContainer();
                this.moveOnTop();
                this.bindGlobalListeners();
                this.enableModality();
                break;
        }
    };
    ConfirmDialog.prototype.onAnimationEnd = function (event) {
        switch (event.toState) {
            case 'void':
                this.onOverlayHide();
                break;
        }
    };
    ConfirmDialog.prototype.appendContainer = function () {
        if (this.appendTo) {
            if (this.appendTo === 'body')
                document.body.appendChild(this.wrapper);
            else
                DomHandler.appendChild(this.wrapper, this.appendTo);
        }
    };
    ConfirmDialog.prototype.restoreAppend = function () {
        if (this.wrapper && this.appendTo) {
            this.el.nativeElement.appendChild(this.wrapper);
        }
    };
    ConfirmDialog.prototype.enableModality = function () {
        if (this.blockScroll) {
            DomHandler.addClass(document.body, 'ui-overflow-hidden');
        }
    };
    ConfirmDialog.prototype.disableModality = function () {
        this.maskVisible = false;
        if (this.blockScroll) {
            DomHandler.removeClass(document.body, 'ui-overflow-hidden');
        }
        if (this.container) {
            this.cd.detectChanges();
        }
    };
    ConfirmDialog.prototype.close = function (event) {
        if (this.confirmation.rejectEvent) {
            this.confirmation.rejectEvent.emit();
        }
        this.hide();
        event.preventDefault();
    };
    ConfirmDialog.prototype.hide = function () {
        this.visible = false;
    };
    ConfirmDialog.prototype.moveOnTop = function () {
        if (this.autoZIndex) {
            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));
            this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));
        }
    };
    ConfirmDialog.prototype.getWrapperClass = function () {
        var wrapperClass = { 'ui-widget-overlay ui-dialog-mask': true, 'ui-dialog-mask-scrollblocker': this.blockScroll };
        wrapperClass[this.getPositionClass().toString()] = true;
        return wrapperClass;
    };
    ConfirmDialog.prototype.getPositionClass = function () {
        var _this = this;
        var positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];
        var pos = positions.find(function (item) { return item === _this.position; });
        return pos ? "ui-dialog-" + pos : '';
    };
    ConfirmDialog.prototype.bindGlobalListeners = function () {
        var _this = this;
        if ((this.closeOnEscape && this.closable) || this.focusTrap && !this.documentEscapeListener) {
            this.documentEscapeListener = this.renderer.listen('document', 'keydown', function (event) {
                if (event.which == 27 && (_this.closeOnEscape && _this.closable)) {
                    if (parseInt(_this.container.style.zIndex) === (DomHandler.zindex + _this.baseZIndex) && _this.visible) {
                        _this.close(event);
                    }
                }
                if (event.which === 9 && _this.focusTrap) {
                    event.preventDefault();
                    var focusableElements = DomHandler.getFocusableElements(_this.container);
                    if (focusableElements && focusableElements.length > 0) {
                        if (!document.activeElement) {
                            focusableElements[0].focus();
                        }
                        else {
                            var focusedIndex = focusableElements.indexOf(document.activeElement);
                            if (event.shiftKey) {
                                if (focusedIndex == -1 || focusedIndex === 0)
                                    focusableElements[focusableElements.length - 1].focus();
                                else
                                    focusableElements[focusedIndex - 1].focus();
                            }
                            else {
                                if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))
                                    focusableElements[0].focus();
                                else
                                    focusableElements[focusedIndex + 1].focus();
                            }
                        }
                    }
                }
            });
        }
    };
    ConfirmDialog.prototype.unbindGlobalListeners = function () {
        if (this.documentEscapeListener) {
            this.documentEscapeListener();
            this.documentEscapeListener = null;
        }
    };
    ConfirmDialog.prototype.onOverlayHide = function () {
        this.disableModality();
        this.unbindGlobalListeners();
        this.container = null;
    };
    ConfirmDialog.prototype.ngOnDestroy = function () {
        this.restoreAppend();
        this.onOverlayHide();
        this.subscription.unsubscribe();
    };
    ConfirmDialog.prototype.accept = function () {
        if (this.confirmation.acceptEvent) {
            this.confirmation.acceptEvent.emit();
        }
        this.hide();
        this.confirmation = null;
    };
    ConfirmDialog.prototype.reject = function () {
        if (this.confirmation.rejectEvent) {
            this.confirmation.rejectEvent.emit();
        }
        this.hide();
        this.confirmation = null;
    };
    ConfirmDialog.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ConfirmationService },
        { type: NgZone },
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "header", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "icon", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "message", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "style", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "styleClass", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "acceptIcon", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "acceptLabel", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "acceptVisible", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "rejectIcon", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "rejectLabel", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "rejectVisible", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "acceptButtonStyleClass", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "rejectButtonStyleClass", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "closeOnEscape", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "blockScroll", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "rtl", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "closable", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "appendTo", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "key", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "autoZIndex", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "baseZIndex", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "transitionOptions", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "focusTrap", void 0);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "visible", null);
    __decorate([
        Input()
    ], ConfirmDialog.prototype, "position", null);
    __decorate([
        ContentChild(Footer, { static: true })
    ], ConfirmDialog.prototype, "footer", void 0);
    __decorate([
        ViewChild('content', { static: true })
    ], ConfirmDialog.prototype, "contentViewChild", void 0);
ConfirmDialog.ɵfac = function ConfirmDialog_Factory(t) { return new (t || ConfirmDialog)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ConfirmationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ConfirmDialog.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ConfirmDialog, selectors: [["p-confirmDialog"]], contentQueries: function ConfirmDialog_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, Footer, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footer = _t.first);
    } }, viewQuery: function ConfirmDialog_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentViewChild = _t.first);
    } }, inputs: { acceptIcon: "acceptIcon", acceptLabel: "acceptLabel", acceptVisible: "acceptVisible", rejectIcon: "rejectIcon", rejectLabel: "rejectLabel", rejectVisible: "rejectVisible", closeOnEscape: "closeOnEscape", blockScroll: "blockScroll", closable: "closable", autoZIndex: "autoZIndex", baseZIndex: "baseZIndex", transitionOptions: "transitionOptions", focusTrap: "focusTrap", visible: "visible", position: "position", header: "header", icon: "icon", message: "message", style: "style", styleClass: "styleClass", acceptButtonStyleClass: "acceptButtonStyleClass", rejectButtonStyleClass: "rejectButtonStyleClass", rtl: "rtl", appendTo: "appendTo", key: "key" }, ngContentSelectors: _c6, decls: 1, vars: 1, consts: [["class", "ui-dialog-wrapper", 3, "ngClass", 4, "ngIf"], [1, "ui-dialog-wrapper", 3, "ngClass"], [3, "ngClass", "ngStyle", "class", "mousedown", 4, "ngIf"], [3, "ngClass", "ngStyle", "mousedown"], [1, "ui-dialog-titlebar", "ui-widget-header", "ui-helper-clearfix", "ui-corner-top"], ["class", "ui-dialog-title", 4, "ngIf"], [1, "ui-dialog-titlebar-icons"], ["tabindex", "0", "role", "button", 3, "ngClass", "click", "keydown.enter", 4, "ngIf"], [1, "ui-dialog-content", "ui-widget-content"], ["content", ""], [3, "ngClass", "class", 4, "ngIf"], [1, "ui-confirmdialog-message", 3, "innerHTML"], ["class", "ui-dialog-footer ui-widget-content", 4, "ngIf"], [1, "ui-dialog-title"], ["tabindex", "0", "role", "button", 3, "ngClass", "click", "keydown.enter"], [1, "pi", "pi-times"], [3, "ngClass"], [1, "ui-dialog-footer", "ui-widget-content"], ["type", "button", "pButton", "", 3, "icon", "label", "class", "click", 4, "ngIf"], ["type", "button", "pButton", "", 3, "icon", "label", "click"]], template: function ConfirmDialog_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c5);
        ɵngcc0.ɵɵtemplate(0, ConfirmDialog_div_0_Template, 2, 2, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.maskVisible);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc2.NgStyle, ɵngcc3.ButtonDirective], encapsulation: 2, data: { animation: [
            trigger('animation', [
                transition('void => visible', [
                    useAnimation(showAnimation)
                ]),
                transition('visible => void', [
                    useAnimation(hideAnimation)
                ])
            ])
        ] } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConfirmDialog, [{
        type: Component,
        args: [{
                selector: 'p-confirmDialog',
                template: "\n        <div class=\"ui-dialog-wrapper\" [ngClass]=\"getWrapperClass()\" *ngIf=\"maskVisible\">\n            <div [ngClass]=\"{'ui-dialog ui-confirmdialog ui-widget ui-widget-content ui-corner-all ui-shadow':true,'ui-dialog-rtl':rtl}\" [ngStyle]=\"style\" [class]=\"styleClass\" (mousedown)=\"moveOnTop()\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" *ngIf=\"visible\">\n                <div class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\">\n                    <span class=\"ui-dialog-title\" *ngIf=\"header\">{{header}}</span>\n                    <div class=\"ui-dialog-titlebar-icons\">\n                        <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                            <span class=\"pi pi-times\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div #content class=\"ui-dialog-content ui-widget-content\">\n                    <i [ngClass]=\"'ui-confirmdialog-icon'\" [class]=\"icon\" *ngIf=\"icon\"></i>\n                    <span class=\"ui-confirmdialog-message\" [innerHTML]=\"message\"></span>\n                </div>\n                <div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footer\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n                <div class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"!footer\">\n                    <button type=\"button\" pButton [icon]=\"acceptIcon\" [label]=\"acceptLabel\" (click)=\"accept()\" [class]=\"acceptButtonStyleClass\" *ngIf=\"acceptVisible\"></button>\n                    <button type=\"button\" pButton [icon]=\"rejectIcon\" [label]=\"rejectLabel\" (click)=\"reject()\" [class]=\"rejectButtonStyleClass\" *ngIf=\"rejectVisible\"></button>\n                </div>\n            </div>\n        </div>\n    ",
                animations: [
                    trigger('animation', [
                        transition('void => visible', [
                            useAnimation(showAnimation)
                        ]),
                        transition('visible => void', [
                            useAnimation(hideAnimation)
                        ])
                    ])
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.ConfirmationService }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }]; }, { acceptIcon: [{
            type: Input
        }], acceptLabel: [{
            type: Input
        }], acceptVisible: [{
            type: Input
        }], rejectIcon: [{
            type: Input
        }], rejectLabel: [{
            type: Input
        }], rejectVisible: [{
            type: Input
        }], closeOnEscape: [{
            type: Input
        }], blockScroll: [{
            type: Input
        }], closable: [{
            type: Input
        }], autoZIndex: [{
            type: Input
        }], baseZIndex: [{
            type: Input
        }], transitionOptions: [{
            type: Input
        }], focusTrap: [{
            type: Input
        }], visible: [{
            type: Input
        }], position: [{
            type: Input
        }], header: [{
            type: Input
        }], icon: [{
            type: Input
        }], message: [{
            type: Input
        }], style: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], acceptButtonStyleClass: [{
            type: Input
        }], rejectButtonStyleClass: [{
            type: Input
        }], rtl: [{
            type: Input
        }], appendTo: [{
            type: Input
        }], key: [{
            type: Input
        }], footer: [{
            type: ContentChild,
            args: [Footer, { static: true }]
        }], contentViewChild: [{
            type: ViewChild,
            args: ['content', { static: true }]
        }] }); })();
    return ConfirmDialog;
}());
export { ConfirmDialog };
var ConfirmDialogModule = /** @class */ (function () {
    function ConfirmDialogModule() {
    }
ConfirmDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ConfirmDialogModule });
ConfirmDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ConfirmDialogModule_Factory(t) { return new (t || ConfirmDialogModule)(); }, imports: [[CommonModule, ButtonModule],
        ButtonModule, SharedModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ConfirmDialogModule, { declarations: function () { return [ConfirmDialog]; }, imports: function () { return [CommonModule, ButtonModule]; }, exports: function () { return [ConfirmDialog,
        ButtonModule, SharedModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConfirmDialogModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ButtonModule],
                exports: [ConfirmDialog, ButtonModule, SharedModule],
                declarations: [ConfirmDialog]
            }]
    }], function () { return []; }, null); })();
    return ConfirmDialogModule;
}());
export { ConfirmDialogModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,